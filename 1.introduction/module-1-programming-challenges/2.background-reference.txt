Background Knowledge
- Knowing at least one of the following programming languages:
- python
- C
- C++
- Java
- C#
- JavaScript
- Ruby
- Haskell
- Rust
- Scala
- Peri

Required skill set
- Read data from standard input (mostly sequence of integers or strings)
- Compute the results
 - Mostly a few if/else and loops
 - Better if you can write functions
 -Slight knowledge of object-oriented programming (not a must)
- Print the result to the standard output

Optional skill set
- For most algorithms
 - We will analyze their run-time and correctness
- To understand them:
 - Basic knowledge of Descrete Mathematics required; especially
  - Proof by induction
  - Proof by contradiction

Provided materials
- In lectures:
 - Example problems will be implemented using Python
In assignments:
 - For wach programming task, you will be given starter files in:
  - Python
  - C++
  - Java

Test yourself
- Next module:
 - Two toy problems to test your programming ability
  - Sum of two digits
  - Maximum pairwise product of a set of numbers
If you can pass them, you can pass the course

References
- Introduction to algorithms by Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, Clifford Stein (3rd edition)
- Algorithms by Sanjoy Dasgupta, Christos H. Papadimitriou, Umesh Vazirani
- Learning Algorithms through Programming and Puzzle Solving by Alexander S. Kulikov, Pavel Pevzner